name: Run tests

on:
  pull_request:

jobs:
  run_tests:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: true
      matrix:
        python-version: ["3.10", "3.11"]

    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install poetry
        uses: snok/install-poetry@v1
        with:
          version: latest
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      - name: Load cache
        uses: actions/cache@v4
        id: cache
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('**/pyproject.toml') }}

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: poetry install --no-interaction

      - name: Run mypy
        run: poetry run mypy src

      - name: Check styling
        run: poetry run black . --check

      - name: Linting
        run: poetry run ruff check .

      - name: Run tests
        run: poetry run pytest -n auto -s

      - name: build docs
        run: poetry run mkdocs build
